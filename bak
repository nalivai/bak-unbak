#!/bin/bash
if [[ ! $1 ]]; then
	echo "creates a copy of the file or dirrectory in the same dirrectory with the same name but with added .bak "
	echo "    usage: bak FILENAME [OPTIONS]"
	echo "    OPTIONS:"
	echo "    	-n --no_override: do not overrides existing copy"
	echo "    	-d --delete: removes original"
	exit 1
fi

if [[ -f $1 ]] || [[ -d $1 ]]; then 	
	FILE=$1
	# suffix="/"
	# FILE=${FILE%"$suffix"}
	TARGETFILE=$1.bak
	shift;
else 
	echo "file $1 not found" 
	exit 1
fi

OPTS=`getopt -o nd --long no_override,delete -n 'parse-options' -- "$@"`

while true; do
case "$1" in
	-n | --no_override 		) no_override=1; shift ;;
	-d | --delete | -r		) delete=1; shift ;;
	-- ) shift; break ;;
	* ) break ;;
esac
done

if [[ no_override -eq 1 ]] && ( [[ -f $TARGETFILE ]] || [[ -d $TARGETFILE ]] ); then
	echo "$TARGETFILE already exists, exiting"
	exit 2	
fi


echo "backuping file $FILE to $TARGETFILE"
if [[ $delete == 1 ]]; then
	cp -Trfa --strip-trailing-slashes $FILE $TARGETFILE
	if [[ $? == 0 ]]; then
		echo "and removing the original"
		rm -rf $FILE
	fi
else 
	cp -Trfa --strip-trailing-slashes $FILE $TARGETFILE
fi

exit $?

# if [[ $1 ]] && ([[ -f $1 ]] || [[ -d $1 ]]); then
# 	if [[ $2 ]] && [[ $2 == "-no" ]] && ( [[ -f $1 ]] || [[ -d $1 ]] ); then
# 		echo "$1.bak already exists, exiting"
# 		exit 1	
# 	fi
# 	echo "backuping file $1"

# 	FILENAME=$1
# 	suffix="/"
# 	FILENAME=${FILENAME%"$suffix"}

# 	cp -r $FILENAME $FILENAME.bak
# else
# 	echo "file $FILENAME not found"
# fi

